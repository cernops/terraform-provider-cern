---

stages:
- build
- security
- qa
- misc
- release

include:
  - template: SAST.gitlab-ci.yml
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml

build:
  stage: build
  image: golang:1.17
  script:
    - make build
  artifacts:
    expose_as: 'terraform-provider-cern'
    paths:
      - terraform-provider-cern

sast:
  stage: security
  needs: []

dependency_scanning:
  stage: security
  needs: []

secret_detection:
  stage: security
  needs: []

golang-lint:
  stage: qa
  needs: []
  image: golangci/golangci-lint:v1.45
  script:
    - golangci-lint run -v

test-go-generate:
  stage: qa
  needs: []
  image: golang:1.17
  variables:
    TERRAFORM_VERSION: 1.1.8
  script:
    - apt-get update && apt-get install zip -y
    - wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
    - unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /usr/local/bin
    - go generate
    - | 
      git diff --compact-summary --exit-code ||
        (echo;
         echo "Unexpected difference in directories after code generation. Run 'go generate' command and commit.";
         exit 1)

code_navigation:
  stage: misc
  image: sourcegraph/lsif-go:v1
  needs: []
  script:
    - lsif-go
  allow_failure: true # recommended
  artifacts:
    reports:
      lsif: dump.lsif

release:
  stage: release
  image:
    name: goreleaser/goreleaser:v1.7.0
    entrypoint: ['']
  only:
    - tags
  variables:
    # Disable shallow cloning so that goreleaser can diff between tags to
    # generate a changelog.
    GIT_DEPTH: 0
  script:
    - gpg --import < $GPG_PRIV_KEY_FILE
    - goreleaser release --rm-dist

publish:
  stage: release
  image: golang:1.13
  variables:
    DEBIAN_FRONTEND: "noninteractive"
    S3_LATEST: "2.0.2"
  before_script:
    - apt-get update && apt-get -y install krb5-user libkrb5-dev zip python-dateutil
    - curl -L http://downloads.sourceforge.net/project/s3tools/s3cmd/${S3_LATEST}/s3cmd-${S3_LATEST}.tar.gz | tar zxv -C .
  script:
    - zip terraform-provider-cern_${CI_COMMIT_REF_NAME}.zip terraform-provider-cern
    - ./s3cmd-${S3_LATEST}/s3cmd --access_key=${S3_ACCESS_KEY} --secret_key=${S3_SECRET_KEY} --host=${S3_HOST} --host-bucket=%\(bucket\)s.${S3_HOST} --acl-private put terraform-provider-cern_${CI_COMMIT_REF_NAME}.zip "s3://$S3_CONTAINER/"
  only:
    - tags
